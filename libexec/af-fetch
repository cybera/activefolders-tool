#!/usr/bin/env python
# Usage: af fetch [<folder-id>]
# Summary: Fetch folder contents into current directory
# Help: Check if results are delivered and download all and any results folders.
# <folder-id> overrides this behaviour, downloading any provided id.

import requests
import sys
import os
import os.path
import json
import time


def fetch(source, destination, path=''):
    url = os.path.join(source, path)
    location = os.path.join(destination, path)
    r = requests.get(url)
    if r.status_code is 201:
        os.makedirs(location)
        for obj in r.json():
            new_path = os.path.join(path, obj)
            fetch(new_path)
    elif r.status_code is 200:
        with open(location, 'w+') as f:
            f.write(r.content)

# Get config
config = read_config(os.path.expanduser("~/.activefolders"))
if os.path.exists("./.activefolders"):
    config = read_config("./.activefolders")

if config:
    url = config['url']
else:
    print("No connection found, please run `connect` first")
    sys.exit(0)

if config.get('folder'):
    print("This directory already has been uploaded into folder " + config['folder'])
    sys.exit(0)

# Parse arguments
if len(sys.argv) <= 1:
    folder = sys.argv[1]
    source = os.path.join(config['url'], "folders", folder, "files")
    destination = os.path.join("./results", folder)
    print("Downloading %s" % folder)
    time.sleep(1)
    fetch(source, destination)
